rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Products collection
    match /products/{productId} {
      allow read: if true;  // Anyone can read products
      allow write: if isAuthenticated() && request.auth.token.admin == true;  // Only admins can modify products
    }
    
    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) ||  // User can read their own orders
        request.auth.token.admin == true  // Admins can read all orders
      );
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update: if isAuthenticated() && (
        isOwner(resource.data.userId) ||  // User can update their own orders
        request.auth.token.admin == true  // Admins can update all orders
      );
      allow delete: if isAuthenticated() && request.auth.token.admin == true;  // Only admins can delete orders
    }
  }
}
